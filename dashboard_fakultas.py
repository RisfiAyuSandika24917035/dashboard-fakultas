# -*- coding: utf-8 -*-
"""dashboard_fakultas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11xf_vVQjNG5z7L5GXIIQudYKscf43NAf
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import plotly.express as px


st.set_page_config(layout="wide")
st.title("Dashboard  Fakultas Sains dan Teknologi Universitas Kartama")

# Excel
xlsx = pd.ExcelFile("data_dashboard.xlsx")

# Semua sheet
df_aktif = pd.read_excel(xlsx, "Mahasiswa Aktif")
df_lulusan = pd.read_excel(xlsx, "Lulusan per Semester")
df_waktu = pd.read_excel(xlsx, "Waktu Tempuh Studi")
df_akreditasi = pd.read_excel(xlsx, "Status Akreditasi")
df_prodi = pd.read_excel(xlsx, "Prodi Aktif")
df_distribusi = pd.read_excel(xlsx, "Distribusi Mahasiswa")
df_kuesioner = pd.read_excel(xlsx, "Kuesioner Dosen")

# Sidebar: filter tahun
tahun_opsi = sorted(df_aktif["Tahun"].dropna().unique())
tahun_pilih = st.sidebar.selectbox("Pilih Tahun", tahun_opsi)

# Sidebar: filter prodi
prodi_opsi = sorted(df_aktif["Program Studi"].dropna().unique())
prodi_pilih = st.sidebar.selectbox("Pilih Program Studi", ["Semua"] + prodi_opsi)

# === Box ===
st.markdown("## Data")

# tahun sebelumnya
tahun_sebelumnya = tahun_pilih - 1

col1, col2, col3 = st.columns(3)

# --- Mahasiswa Aktif ---
aktif_now = df_aktif[df_aktif["Tahun"] == tahun_pilih]["Jumlah Mahasiswa"].sum()
aktif_prev = df_aktif[df_aktif["Tahun"] == tahun_sebelumnya]["Jumlah Mahasiswa"].sum()
col1.metric(
    label="Mahasiswa Aktif",
    value=f"{aktif_now:,}",
    delta=f"{aktif_now - aktif_prev:,}" if not pd.isna(aktif_prev) else "Data N/A"
)

# --- Lulusan ---
lulusan_now = df_lulusan[df_lulusan["Tahun"] == tahun_pilih]["Jumlah Lulusan"].sum()
lulusan_prev = df_lulusan[df_lulusan["Tahun"] == tahun_sebelumnya]["Jumlah Lulusan"].sum()
col2.metric(
    label="Lulusan Tahun Ini",
    value=f"{lulusan_now:,}",
    delta=f"{lulusan_now - lulusan_prev:,}" if not pd.isna(lulusan_prev) else "Data N/A"
)

# --- Prodi Aktif ---
total_prodi_now = df_prodi["Jumlah Prodi Aktif"].sum()
col3.metric("Program Studi Aktif", total_prodi_now)

# === Jumlah Mahasiswa Aktif ===
st.subheader("Jumlah Mahasiswa Aktif per Program Studi")

aktif = df_aktif[df_aktif["Tahun"] == tahun_pilih]
if prodi_pilih != "Semua":
    aktif = aktif[aktif["Program Studi"] == prodi_pilih]

st.bar_chart(data=aktif, x="Program Studi", y="Jumlah Mahasiswa")

# === Lulusan per Semester ===
st.subheader("Jumlah Lulusan per Semester")

lulusan = df_lulusan[df_lulusan["Tahun"] == tahun_pilih]
if prodi_pilih != "Semua":
    lulusan = lulusan[lulusan["Program Studi"] == prodi_pilih]
    
fig_lulusan = px.bar(
    lulusan,
    x="Program Studi",
    y="Jumlah Lulusan",
    color="Semester",
    barmode="group",
    title=f"Jumlah Lulusan Semester Ganjil/Genap - Tahun {tahun_pilih}"
)

st.plotly_chart(fig_lulusan, use_container_width=True)

# === Rata-rata Waktu Tempuh Studi ===
st.subheader("Rata-rata Waktu Tempuh Studi per Program Studi (Tahun)")

df_waktu_filtered = df_waktu.copy()
if prodi_pilih != "Semua":
    df_waktu_filtered = df_waktu_filtered[df_waktu_filtered["Program Studi"] == prodi_pilih]

fig_waktu = px.bar(
    df_waktu_filtered,
    x="Rata-rata Tahun",
    y="Program Studi",
    orientation="h",
    title="Rata-rata Waktu Tempuh Studi per Program Studi (dalam Tahun)",
    color_discrete_sequence=["skyblue"]
)
fig_waktu.update_layout(xaxis_range=[0, 6]) 

st.plotly_chart(fig_waktu, use_container_width=True)

# === Status Akreditasi ===
st.subheader("Status Akreditasi Program Studi")
df_akreditasi_display = df_akreditasi.copy()
df_akreditasi_display.index = range(1, len(df_akreditasi_display) + 1)
df_akreditasi_display.index.name = "No"
st.dataframe(df_akreditasi_display)

# === Jumlah Prodi Aktif ===
st.subheader("Jumlah Program Studi Aktif per Jenjang")
st.bar_chart(data=df_prodi, x="Jenjang", y="Jumlah Prodi Aktif")

import plotly.express as px

# === Jumlah Mahasiswa ===
st.subheader("Jumlah Mahasiswa per Jenjang dan Tahun")

distribusi = df_distribusi[df_distribusi["Tahun"] == tahun_pilih]

fig_pie = px.pie(
    distribusi,
    names="Jenjang",
    values="Jumlah Mahasiswa",
    title=f"Distribusi Mahasiswa Tahun {tahun_pilih}",
    hole=0.4
)

st.plotly_chart(fig_pie, use_container_width=True)

# === Kuesioner Dosen ===
st.subheader("Rata-rata Skor Penilaian Dosen oleh Mahasiswa")
df_kuesioner.columns = df_kuesioner.columns.str.strip()
kues = df_kuesioner[df_kuesioner["Tahun"] == tahun_pilih]
if prodi_pilih != "Semua":
    kues = kues[kues["Program Studi"] == prodi_pilih]
st.bar_chart(data=kues, x="Program Studi", y="Rata-rata Skor Penilaian Dosen (1-10)")


st.caption("Sumber data: Simulasi internal")
